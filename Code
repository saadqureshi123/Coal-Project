INCLUDE Irvine32.inc

.data
msg1 BYTE "Enter a string: ", 0
msg2 BYTE "The string is a palindrome", 0
msg3 BYTE "The string is not a palindrome", 0
userinput BYTE 20 DUP(?)
stringRev BYTE 20 DUP(?)

stringcmp PROTO
stringreverse PROTO

.code

main PROC
    INVOKE stringcmp
    call crlf
    exit
main ENDP

stringcmp PROC
    mov edx, OFFSET msg1
    call WriteString

    mov esi, OFFSET userinput
L1:
    call ReadChar
    call writechar
    mov [esi], al
    cmp al, 0dh
    je equal
    inc esi
    jmp L1

equal:
    mov byte ptr [esi], 0  ; Null-terminate the string
    invoke stringreverse

    ; Compare the original string with its reversed 
    mov esi, OFFSET userinput
    mov edi, OFFSET stringRev
    mov ecx, esi
find_length:
    cmp byte ptr [ecx], 0
    je length_found
    inc ecx
    jmp find_length

length_found:
    sub ecx, esi  ; ECX now contains the length of the string

    mov esi, OFFSET userinput
    mov edi, OFFSET stringRev
    mov ebx, ecx  ; Save the length in EBX for loop control

L2:
    mov al, [esi]
    cmp al, [edi]
    jne NOTCASEE
    inc esi
    inc edi
    dec ebx
    jnz L2

    ; If the strings are identical, print the "palindrome" message
    mov edx, OFFSET msg2
    call writestring
    jmp last

NOTCASEE:
    ; If the strings are not identical, print the "not a palindrome" message
    mov edx, OFFSET msg3
    call writestring

last:
    ret
stringcmp ENDP

stringreverse PROC

    ; Calculate the size of the input string including the null terminator
    mov ecx, OFFSET userinput
find_length_reverse:
    cmp byte ptr [ecx], 0
    je length_found_reverse
    inc ecx
    jmp find_length_reverse

length_found_reverse:
    sub ecx, OFFSET userinput  ; ECX now contains the length of the string

    ; Reverse the string
    mov esi, OFFSET userinput
    add esi, ecx
    dec esi  ; Point to the last character of the input string
    mov edi, OFFSET stringRev

reverse_loop:
    mov al, [esi]
    mov [edi], al
    dec esi
    inc edi
    loop reverse_loop

    ; Null-terminate the reversed string
    mov byte ptr [edi], 0

    ret
stringreverse ENDP

END main
